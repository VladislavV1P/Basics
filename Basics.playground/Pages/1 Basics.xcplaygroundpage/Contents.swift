import UIKit

//–û–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
let maxNumberOfLoginAttempts = 10
var currentLoginAttempt = 0

//–ù–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
var x = 0.0 , y = 0.1 , z = 0.2

//–ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤
var wellcomeMassage: String
wellcomeMassage = "Hello"

//–º–æ–∂–µ—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
var red, green, blue: Double

//–ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
//–ò–º–µ–Ω–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã, —Å—Ç—Ä–µ–ª–∫–∏, —Å–∫–∞–ª—è—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è Unicode —á–∞—Å—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–ª–∏ —Å–∏–º–≤–æ–ª—ã –ª–∏–Ω–µ–π–Ω–æ–≥–æ –∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—è. –û–Ω–∏ —Ç–∞–∫–∂–µ –Ω–µ –º–æ–≥—É—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å —á–∏—Å–ª–∞, —Ö–æ—Ç—è –Ω–æ–º–µ—Ä–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω—ã –≤ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ.
let œÄ = 3.14
let —Å–ª–æ–≤–æ = "—Ä—É"
let üöóüöïüöô = "car"

//print(_:separator:terminator:)
print(—Å–ª–æ–≤–æ)
//Swift –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é
print("Swift –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é \(üöóüöïüöô)")

//–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò
//–û–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –¥–≤—É—Ö –∫–æ—Å—ã—Ö —á–µ—Ä—Ç (//)

/*–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ø—Ä—è–º–æ–π –∫–æ—Å–æ–π —á–µ—Ä—Ç—ã
 , –∑–∞ –∫–æ—Ç–æ—Ä–æ–π —Å–ª–µ–¥—É–µ—Ç –∑–≤–µ–∑–¥–æ—á–∫–∞ (/*) –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –∑–≤–µ–∑–¥–æ—á–∫–æ–π,
 ,–∑–∞ –∫–æ—Ç–æ—Ä–æ–π —Å–ª–µ–¥—É–µ—Ç –∫–æ—Å–∞—è —á–µ—Ä—Ç–∞ –≤–ø–µ—Ä–µ–¥ (*/)*/

/*–í–ª–æ–∂–µ–Ω–Ω—ã–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
 /*–ø–æ–∑–≤–æ–ª—è—é—Ç –±—ã—Å—Ç—Ä–æ –∏ –ª–µ–≥–∫–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞ */
 , –¥–∞–∂–µ –µ—Å–ª–∏ –∫–æ–¥ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.*/

//üåÄ–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã
let minValue = UInt8.min
let maxValue = UInt8.max

//üåÄ–ß–∏—Å–ª–æ–≤—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã
let decimalInt = 17 // 10 —Å–∏—Å—Ç–µ–º–µ
let binaryInt = 0b10001 // 2 —Å–∏—Å—Ç–µ–º–µ
let octalInt = 0o21 //8 —Å–∏—Å—Ç–µ–º–µ
let hexadecimalInt = 0x11 // 16 c–∏—Å—Ç–µ–º–∞

// –ª–∏—Ç–µ—Ä–∞–ª—ã —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π
let decimalDuble = 12.1875
let exponentDuble = 1.21875e1 //1.21875 x 10
let hexadecimalDuble = 0xC.3p0 // 12 .  3 / 16 x 1 =  12.1875
let hexadecimalDuble2 = 0xFp2 // 15 x 2 x 2 = 60

//–ß–∏—Å–ª–æ–≤—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
let paddedDouble = 000123.342
let oneMillion = 1_000_000
let justOverOneMillion = 1_000_000.000_000_1

//üåÄ–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —á–∏—Å–ª–æ–≤–æ–≥–æ —Ç–∏–ø–∞
let twoThousand: UInt16 = 2_000
let one: UInt8 = 1
let twoThousandAndOne = twoThousand + UInt16(one)

//–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –∏ —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π
let three = 3
let pointOneFourOneFiveNine = 0.14159
let pi = Double(three) + pointOneFourOneFiveNine
let integerPi = Int(pi)

//üåÄ–ü—Å–µ–≤–¥–æ–Ω–∏–º—ã —Ç–∏–ø–∞ typealias
//–ü—Å–µ–≤–¥–æ–Ω–∏–º—ã —Ç–∏–ø–æ–≤ –ø–æ–ª–µ–∑–Ω—ã, –∫–æ–≥–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–∏–ø –ø–æ –∏–º–µ–Ω–∏, –∫–æ—Ç–æ—Ä–æ–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É–∞–ª—å–Ω–æ –±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥–∏—Ç
typealias AudioSample = UInt16

//–ü–æ—Å–ª–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø—Å–µ–≤–¥–æ–Ω–∏–º–∞ —Ç–∏–ø–∞ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Å–µ–≤–¥–æ–Ω–∏–º –≤ –ª—é–±–æ–º –º–µ—Å—Ç–µ, –≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è
let maxAmplitudeFound = AudioSample.min

//üåÄBOOL
let orangesAreOrange = true
let turnipsAreDelicious = false
if turnipsAreDelicious {
    print("Mmm, tasty turnips!")
} else {
    print("Eww, turnips are horrible.")
}

//üåÄ–ö–æ—Ä—Ç–µ–∂–∏ - Tuples
//–ö–æ—Ä—Ç–µ–∂–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –≤ –æ–¥–Ω–æ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ó–Ω–∞—á–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ä—Ç–µ–∂–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ –∏ –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞ –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º.
let http404Error = (404, "Not Found")

//–í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–∑–ª–æ–∂–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä—Ç–µ–∂–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let (statusCode, statusMessage) = http404Error
print("The status code is \(statusCode)")
print("The status message is \(statusMessage)")

//–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω—ã —Ç–æ–ª—å–∫–æ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ä—Ç–µ–∂–∞, –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —á–∞—Å—Ç–∏ –∫–æ—Ä—Ç–µ–∂–∞ —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º (_) –ø—Ä–∏ —Ä–∞–∑–ª–æ–∂–∫–µ –∫–æ—Ä—Ç–µ–∂–∞
let (justTheStatusCode, _) = http404Error
print("The status code is \(justTheStatusCode)")

//–ö—Ä–æ–º–µ —Ç–æ–≥–æ, –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ—Ä—Ç–µ–∂–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∏–Ω–¥–µ–∫—Å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å –Ω—É–ª—è
print("The status code is \(http404Error.0)")
print("The status message is \(http404Error.1)")

//–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–∑–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ—Ä—Ç–µ–∂–∞, –∫–æ–≥–¥–∞ –∫–æ—Ä—Ç–µ–∂ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
let http200Status = (statusCode: 200, description: "Ok")

//–ï—Å–ª–∏ –≤—ã –Ω–∞–∑—ã–≤–∞–µ—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ—Ä—Ç–µ–∂–µ, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–º–µ–Ω–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º —ç—Ç–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
print("The status code is \(http200Status.statusCode)")
print("The status message is \(http200Status.description)")

//üåÄOPTIONAl
let possibleNumber = "123"
let convertedNumber = Int(possibleNumber) // Int?

//nil
var serverResponseCode: Int? = 404
serverResponseCode = nil
var surveyAnswer: String? // = nil

//operator (!=)
if convertedNumber != nil {
    print("convertedNumber contains some integer value.")
}
//–ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–Ω–∞—á–µ–Ω–∏–µ, –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –µ–≥–æ –±–∞–∑–æ–≤–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é, –¥–æ–±–∞–≤–∏–≤ –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ (!)
if convertedNumber != nil {
    print("convertedNumber has an integer value of \(convertedNumber!).")
}

//unwrapped
if let constantName = convertedNumber {
    print(constantName)
}

if let actualNumber = Int(possibleNumber) {
    print("The string \"\(possibleNumber)\" has an integer value of \(actualNumber)")
} else {
    print("The string \"\(possibleNumber)\" couldn't be converted to an integer")
}

//–ï—Å–ª–∏ –≤–∞–º –Ω–µ –Ω—É–∂–Ω–æ —Å—Å—ã–ª–∞—Ç—å—Å—è –Ω–∞ –∏—Å—Ö–æ–¥–Ω—É—é, –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ—Å–ª–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ–¥–µ—Ä–∂–∞—â–µ–º—É—Å—è –≤ –Ω–µ–π –∑–Ω–∞—á–µ–Ω–∏—é, –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ –∂–µ –∏–º—è –¥–ª—è –Ω–æ–≤–æ–π –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
let myNumber = Int(possibleNumber)
if let myNumber = myNumber {
    print("My number is \(myNumber)")
}

//–≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ, —á—Ç–æ–±—ã —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞—á–µ–Ω–∏–µ
if let myNumber {
    print("My number is \(myNumber)")
}

// –Ω–µ—Å–∫–æ–ª—å–∫–æ —É—Å–ª–æ–≤–∏–π
if let firstNumber = Int("4"), let secondNumber = Int("42"), firstNumber < secondNumber && secondNumber < 100 {
    print("\(firstNumber) < \(secondNumber) < 100")
}

if let firstNumber = Int("4") {
    if let secondNumber = Int("42") {
        if firstNumber < secondNumber && secondNumber < 100 {
            print("\(firstNumber) < \(secondNumber) < 100")
        }
    }
}

//–ù–µ—è–≤–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–µ –æ–ø—Ü–∏–∏ (String! –∞ –Ω–µ –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ (String?)
//–≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
let possibleString: String? = "An optional string."
let forcedString: String = possibleString!

let assumedString: String! = "An implicitly unwrapped optional string."
let implicitString: String = assumedString

let optionalString = assumedString

//–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –Ω–µ—è–≤–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π nil, —Ç–∞–∫ –∂–µ, –∫–∞–∫ –≤—ã –ø—Ä–æ–≤–µ—Ä—è–µ—Ç–µ –æ–±—ã—á–Ω—ã–π –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π
if assumedString != nil {
    print(assumedString!)
}

if let definiteString = assumedString {
    print(definiteString)
}

//üåÄ–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
//–ö–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è —Å—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è —Å –æ—à–∏–±–∫–æ–π, –æ–Ω–∞ –≤—ã–¥–∞–µ—Ç –æ—à–∏–±–∫—É. –í—ã–∑—ã–≤–∞—é—â–∏–π —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–µ—Ç –ø–æ–π–º–∞—Ç—å –æ—à–∏–±–∫—É –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –æ–±—Ä–∞–∑–æ–º.
func canThrowAnError() throws {
//    –§—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –∏–ª–∏ –Ω–µ—Ç
}
do {
    try canThrowAnError()
    // no error was thrown
} catch {
    // an error was thrown
}

//–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –¥–ª—è —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –æ—à–∏–±–∫–∏
enum SandwichError:Error {
    case outOfCleanDishes
    case missingIngredients(ingredients: String)
}
func eatASandwich() {
    
}
func washDishes() {
    
}
func buyGroceries(_ ingredients: String) {
    
}
//–ø—Ä–∏–º–µ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö catch
func makeASandwich() throws {
    // ...
}

do {
    try makeASandwich()
    eatASandwich()
} catch SandwichError.outOfCleanDishes {
    washDishes()
} catch SandwichError.missingIngredients(let ingredients) {
    buyGroceries(ingredients)
}

//üåÄ–£—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è
//–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è–º–∏ –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è: —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Å–±–æ—Ä–∫–∞—Ö, –Ω–æ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –∫–∞–∫ –≤ –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö, —Ç–∞–∫ –∏ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–±–æ—Ä–∫–∞—Ö.
//–û—Ç–ª–∞–¥–∫–∞ —Å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è–º–∏
let age = 3
assert(age >= 0, "A person's age can't be less than zero.")
assert(age >= 0)

//–µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∞ , —Ç–æ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å assertionFailure(_:file:line:) –∫–∞–∫ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ , —á—Ç–æ –µ—Å—Ç—å –Ω–µ—É–¥–∞—á–Ω–æ–µ —É—Ç–≤–µ—Ä–∂–µ–¥–µ–Ω–∏–µ
if age > 10 {
    print("You can ride the roller-coaster or the ferris wheel.")
} else if age >= 0 {
    print("You can ride the ferris wheel.")
} else {
    assertionFailure("A person's age can't be less than zero.")
}

//üåÄ–û–±–µ—Å–ø–µ—á–µ–Ω–∏–µ —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
//–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ –≤—Å—è–∫–∏–π —Ä–∞–∑, –∫–æ–≥–¥–∞ —É—Å–ª–æ–≤–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–æ–∂–Ω—ã–º, –Ω–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ –∏—Å—Ç–∏–Ω–Ω—ã–º, —á—Ç–æ–±—ã –≤–∞—à –∫–æ–¥ –ø—Ä–æ–¥–æ–ª–∂–∞–ª –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ.
//–ù–∞–ø—Ä–∏–º–µ—Ä, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —É—Å–ª–æ–≤–∏–µ, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –Ω–∏–∂–Ω–∏–π –∏–Ω–¥–µ–∫—Å –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ —Ä–∞–º–∫–∏, –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏–∏ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.
//precondition(_:_:file:line:)
var index = 4
precondition(index > 0, "Index must be greater than zero.")

//preconditionFailure("Index must be greater than zero.")
//fatalError(_:file:line:) –≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–æ–¥
//–ª—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å debugPrint()
debugPrint("/...")

//‚ñ∂Ô∏è1) –°–æ–∑–¥–∞—Ç—å —Ö–∞—Ä–∞ƒ∏—Ç–µ—Ä–∏—Å—Ç–∏ƒ∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã: –∏–º—è, —Ñ–∞–º–∏–ª–∏—è,
//–æ—Ç—á–µ—Å—Ç–≤–æ, –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è, —Ä–æ—Å—Ç, –≤–µ—Å.

let firstNameStudent = "Nica"
let LastNameStudent = "Gold"
let patronymicStudent = "Olegovna"
let yearOfBirth = 1997
let height = 187
let weight = 70
//–ó–∞—Ç–µ–º –≤—ã–≤–µ—Å—Ç–∏ –≤—Å–µ —ç—Ç–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫—Ä–∞—Å–∏–≤–æ –≤ –∫–æ–Ω—Å–æ–ª—å
print("Student:")
print("name: \(firstNameStudent) \(patronymicStudent)")
print("last name: \(LastNameStudent)")
print("Year of birth: \(yearOfBirth) year")
print("Height: \(height) cm")
print("Weight: \(weight) kg")




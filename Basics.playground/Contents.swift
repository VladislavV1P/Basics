import UIKit

//–û–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
let maxNumberOfLoginAttempts = 10
var currentLoginAttempt = 0

//–ù–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
var x = 0.0 , y = 0.1 , z = 0.2

//–ê–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤
var wellcomeMassage: String
wellcomeMassage = "Hello"

//–º–æ–∂–µ—Ç–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
var red, green, blue: Double

//–ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
//–ò–º–µ–Ω–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã, –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏–º–≤–æ–ª—ã, —Å—Ç—Ä–µ–ª–∫–∏, —Å–∫–∞–ª—è—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è Unicode —á–∞—Å—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏–ª–∏ —Å–∏–º–≤–æ–ª—ã –ª–∏–Ω–µ–π–Ω–æ–≥–æ –∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—è. –û–Ω–∏ —Ç–∞–∫–∂–µ –Ω–µ –º–æ–≥—É—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å —á–∏—Å–ª–∞, —Ö–æ—Ç—è –Ω–æ–º–µ—Ä–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –≤–∫–ª—é—á–µ–Ω—ã –≤ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ –≤ –Ω–∞–∑–≤–∞–Ω–∏–µ.
let œÄ = 3.14
let —Å–ª–æ–≤–æ = "—Ä—É"
let üöóüöïüöô = "car"

//print(_:separator:terminator:)
print(—Å–ª–æ–≤–æ)
//Swift –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é
print("Swift –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç—Ä–æ–∫–æ–≤—É—é –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é \(üöóüöïüöô)")

//–ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò
//–û–¥–Ω–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –¥–≤—É—Ö –∫–æ—Å—ã—Ö —á–µ—Ä—Ç (//)

/*–ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ø—Ä—è–º–æ–π –∫–æ—Å–æ–π —á–µ—Ä—Ç—ã
 , –∑–∞ –∫–æ—Ç–æ—Ä–æ–π —Å–ª–µ–¥—É–µ—Ç –∑–≤–µ–∑–¥–æ—á–∫–∞ (/*) –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –∑–≤–µ–∑–¥–æ—á–∫–æ–π,
 ,–∑–∞ –∫–æ—Ç–æ—Ä–æ–π —Å–ª–µ–¥—É–µ—Ç –∫–æ—Å–∞—è —á–µ—Ä—Ç–∞ –≤–ø–µ—Ä–µ–¥ (*/)*/

/*–í–ª–æ–∂–µ–Ω–Ω—ã–µ –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
 /*–ø–æ–∑–≤–æ–ª—è—é—Ç –±—ã—Å—Ç—Ä–æ –∏ –ª–µ–≥–∫–æ –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ –±–ª–æ–∫–∏ –∫–æ–¥–∞ */
 , –¥–∞–∂–µ –µ—Å–ª–∏ –∫–æ–¥ —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏.*/

//–¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã
let minValue = UInt8.min
let maxValue = UInt8.max

//–ß–∏—Å–ª–æ–≤—ã–µ –ª–∏—Ç–µ—Ä–∞–ª—ã
let decimalInt = 17 // 10 —Å–∏—Å—Ç–µ–º–µ
let binaryInt = 0b10001 // 2 —Å–∏—Å—Ç–µ–º–µ
let octalInt = 0o21 //8 —Å–∏—Å—Ç–µ–º–µ
let hexadecimalInt = 0x11 // 16 c–∏—Å—Ç–µ–º–∞

// –ª–∏—Ç–µ—Ä–∞–ª—ã —Å –ø–ª–∞–≤–∞—é—â–µ–π –∑–∞–ø—è—Ç–æ–π
let decimalDuble = 12.1875
let exponentDuble = 1.21875e1 //1.21875 x 10
let hexadecimalDuble = 0xC.3p0 // 12 .  3 / 16 x 1 =  12.1875
let hexadecimalDuble2 = 0xFp2 // 15 x 2 x 2 = 60
